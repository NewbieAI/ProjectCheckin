The website will support the following features:

1. User can visit the main website, which contains instructions on what the website does and how to use its features

2. User can create a personal task, public or private
   - Server creates a unique URL, and stores a corresponding calendar object, which is a data container
      for all the checkin activities and comments

3. User can create a group task, or join a group task.
   - Server creates a unique URL for the group task, and webpage stores all the members that are       participating.
   - With every entry into the group task, a new calendar object is created

4. User can delete any of his tasks at any time. Group task expires when the last member activity happened 180 days ago.

5. User can browse popular ongoing tasks, or search for tasks in the search bar

6. Access control
   - User can make his task public or private. Private task requires a key to access the content of the           calendar object. Only task owner can do the check in, owner has an owner key. Everyone with access      can leave a coment.
   - Group projects can be public or private, anyone can join a public group task, but private groups             require a key to join.
   - This is no privacy setting within groups, all members can see all activities.
   - User can change his owner key or private task key for whatever reason.

7. User profile
   - User can create a password protected account that is either linked to a phone or an email.
   - User can divulge as much or as little personal information in his profile description, and the website      (aka me), will not care about who is using the service or why.

8. Automatic reminder
   - Automatic email or text message reminder may be provided if the user requests such services in task settings.

9. User Interactions
   - User may mark certain tasks as favorites. May "like" or "unlike" certain tasks anonymously.
   - Users may bet on how long the task creator will last (this is meant to be a funny side feature, and to practice implementing secure financial transactions over the web)


The website MAY support the following features if I have to time to build them:

1. Comments may contain emoji or multimedia, in case user wants to showcase his/her achievements in his daily activities pertaining to the ask.

2. Developer API may be provided at some point, not that I anticipate people using it, but it's a nice addition to any web service.

3. Report for abuse. If user puts copyrighted material on his/her calendar, or posts pornagraphic, violent, illegal, or otherwise inappropriate contents on my website, I could get into trouble. Contents that receive too many reports will be removed.

4. High availability. The system architecture will be designed to be scalable, however in practice, the acceptable cost of deploying the service is rather limited.

5. Logging in using credentials from other websites. Limited attention is placed on collecting user profile, and account creation is not strictly necessary to access this service. So low priority is given to this feature.

The website will NOT support the following features:

1. Any other customized service based on user data, such as user feed, recommendations, personalized advertisement.

2. Premium pay-for-use services.